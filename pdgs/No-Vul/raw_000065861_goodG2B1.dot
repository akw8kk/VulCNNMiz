digraph FUN1 {  
"1000100" [label = "(METHOD,FUN1)" ]
"1000131" [label = "(METHOD_RETURN,static void)" ]
"1000104" [label = "(<operator>.assignment,VAR1 = VAR2)" ]
"1000108" [label = "(<operator>.notEquals,VAR3!=5)" ]
"1000112" [label = "(FUN2,FUN2(\"\"))" ]
"1000118" [label = "(<operator>.assignment,VAR4[50] = \"\")" ]
"1000121" [label = "(memcpy,memcpy(VAR4, VAR1, strlen(VAR1)*sizeof(char)))" ]
"1000124" [label = "(<operator>.multiplication,strlen(VAR1)*sizeof(char))" ]
"1000125" [label = "(strlen,strlen(VAR1))" ]
"1000127" [label = "(<operator>.sizeOf,sizeof(char))" ]
"1000129" [label = "(FUN2,FUN2(VAR1))" ]
  "1000129" -> "1000131"  [ label = "DDG: VAR1"] 
  "1000124" -> "1000131"  [ label = "DDG: strlen(VAR1)"] 
  "1000108" -> "1000131"  [ label = "DDG: VAR3!=5"] 
  "1000129" -> "1000131"  [ label = "DDG: FUN2(VAR1)"] 
  "1000121" -> "1000131"  [ label = "DDG: memcpy(VAR4, VAR1, strlen(VAR1)*sizeof(char))"] 
  "1000112" -> "1000131"  [ label = "DDG: FUN2(\"\")"] 
  "1000121" -> "1000131"  [ label = "DDG: VAR4"] 
  "1000127" -> "1000131"  [ label = "DDG: char"] 
  "1000121" -> "1000131"  [ label = "DDG: strlen(VAR1)*sizeof(char)"] 
  "1000104" -> "1000131"  [ label = "DDG: VAR2"] 
  "1000108" -> "1000131"  [ label = "DDG: VAR3"] 
  "1000100" -> "1000104"  [ label = "DDG: "] 
  "1000100" -> "1000108"  [ label = "DDG: "] 
  "1000100" -> "1000112"  [ label = "DDG: "] 
  "1000100" -> "1000118"  [ label = "DDG: "] 
  "1000118" -> "1000121"  [ label = "DDG: VAR4"] 
  "1000100" -> "1000121"  [ label = "DDG: "] 
  "1000125" -> "1000121"  [ label = "DDG: VAR1"] 
  "1000124" -> "1000121"  [ label = "DDG: strlen(VAR1)"] 
  "1000125" -> "1000124"  [ label = "DDG: VAR1"] 
  "1000104" -> "1000125"  [ label = "DDG: VAR1"] 
  "1000100" -> "1000125"  [ label = "DDG: "] 
  "1000100" -> "1000124"  [ label = "DDG: "] 
  "1000100" -> "1000127"  [ label = "DDG: "] 
  "1000121" -> "1000129"  [ label = "DDG: VAR1"] 
  "1000100" -> "1000129"  [ label = "DDG: "] 
  "1000108" -> "1000112"  [ label = "CDG: "] 
}
