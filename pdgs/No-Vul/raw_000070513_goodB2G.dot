digraph FUN1 {  
"1000100" [label = "(METHOD,FUN1)" ]
"1000193" [label = "(METHOD_RETURN,static void)" ]
"1000103" [label = "(<operator>.assignment,VAR1 = -1)" ]
"1000105" [label = "(<operator>.minus,-1)" ]
"1000111" [label = "(<operator>.assignment,VAR3[VAR4] = \"\")" ]
"1000115" [label = "(<operator>.notEquals,fgets(VAR3, VAR4, stdin) != NULL)" ]
"1000116" [label = "(fgets,fgets(VAR3, VAR4, stdin))" ]
"1000122" [label = "(<operator>.assignment,VAR1 = FUN2(VAR3))" ]
"1000124" [label = "(FUN2,FUN2(VAR3))" ]
"1000128" [label = "(FUN3,FUN3(\"\"))" ]
"1000135" [label = "(<operator>.assignment,* VAR7 = (int *)malloc(10 * sizeof(int)))" ]
"1000137" [label = "(<operator>.cast,(int *)malloc(10 * sizeof(int)))" ]
"1000139" [label = "(malloc,malloc(10 * sizeof(int)))" ]
"1000140" [label = "(<operator>.multiplication,10 * sizeof(int))" ]
"1000142" [label = "(<operator>.sizeOf,sizeof(int))" ]
"1000145" [label = "(<operator>.assignment,VAR6 = 0)" ]
"1000148" [label = "(<operator>.lessThan,VAR6 < 10)" ]
"1000151" [label = "(<operator>.postIncrement,VAR6++)" ]
"1000154" [label = "(<operator>.assignment,VAR7[VAR6] = 0)" ]
"1000160" [label = "(<operator>.logicalAnd,VAR1 >= 0 && VAR1 < (10))" ]
"1000161" [label = "(<operator>.greaterEqualsThan,VAR1 >= 0)" ]
"1000164" [label = "(<operator>.lessThan,VAR1 < (10))" ]
"1000168" [label = "(<operator>.assignment,VAR7[VAR1] = 1)" ]
"1000174" [label = "(<operator>.assignment,VAR6 = 0)" ]
"1000177" [label = "(<operator>.lessThan,VAR6 < 10)" ]
"1000180" [label = "(<operator>.postIncrement,VAR6++)" ]
"1000183" [label = "(FUN4,FUN4(VAR7[VAR6]))" ]
"1000189" [label = "(FUN3,FUN3(\"\"))" ]
"1000191" [label = "(free,free(VAR7))" ]
"1000155" [label = "(<operator>.indirectIndexAccess,VAR7[VAR6])" ]
"1000169" [label = "(<operator>.indirectIndexAccess,VAR7[VAR1])" ]
"1000184" [label = "(<operator>.indirectIndexAccess,VAR7[VAR6])" ]
  "1000124" -> "1000193"  [ label = "DDG: VAR3"] 
  "1000168" -> "1000193"  [ label = "DDG: VAR7[VAR1]"] 
  "1000103" -> "1000193"  [ label = "DDG: -1"] 
  "1000137" -> "1000193"  [ label = "DDG: malloc(10 * sizeof(int))"] 
  "1000116" -> "1000193"  [ label = "DDG: VAR4"] 
  "1000177" -> "1000193"  [ label = "DDG: VAR6 < 10"] 
  "1000128" -> "1000193"  [ label = "DDG: FUN3(\"\")"] 
  "1000116" -> "1000193"  [ label = "DDG: stdin"] 
  "1000161" -> "1000193"  [ label = "DDG: VAR1"] 
  "1000177" -> "1000193"  [ label = "DDG: VAR6"] 
  "1000116" -> "1000193"  [ label = "DDG: VAR3"] 
  "1000160" -> "1000193"  [ label = "DDG: VAR1 < (10)"] 
  "1000160" -> "1000193"  [ label = "DDG: VAR1 >= 0 && VAR1 < (10)"] 
  "1000189" -> "1000193"  [ label = "DDG: FUN3(\"\")"] 
  "1000139" -> "1000193"  [ label = "DDG: 10 * sizeof(int)"] 
  "1000183" -> "1000193"  [ label = "DDG: VAR7[VAR6]"] 
  "1000154" -> "1000193"  [ label = "DDG: VAR7[VAR6]"] 
  "1000115" -> "1000193"  [ label = "DDG: fgets(VAR3, VAR4, stdin) != NULL"] 
  "1000148" -> "1000193"  [ label = "DDG: VAR6"] 
  "1000148" -> "1000193"  [ label = "DDG: VAR6 < 10"] 
  "1000115" -> "1000193"  [ label = "DDG: NULL"] 
  "1000142" -> "1000193"  [ label = "DDG: int"] 
  "1000115" -> "1000193"  [ label = "DDG: fgets(VAR3, VAR4, stdin)"] 
  "1000183" -> "1000193"  [ label = "DDG: FUN4(VAR7[VAR6])"] 
  "1000191" -> "1000193"  [ label = "DDG: VAR7"] 
  "1000160" -> "1000193"  [ label = "DDG: VAR1 >= 0"] 
  "1000135" -> "1000193"  [ label = "DDG: (int *)malloc(10 * sizeof(int))"] 
  "1000122" -> "1000193"  [ label = "DDG: FUN2(VAR3)"] 
  "1000164" -> "1000193"  [ label = "DDG: VAR1"] 
  "1000105" -> "1000103"  [ label = "DDG: 1"] 
  "1000100" -> "1000103"  [ label = "DDG: "] 
  "1000100" -> "1000105"  [ label = "DDG: "] 
  "1000100" -> "1000111"  [ label = "DDG: "] 
  "1000116" -> "1000115"  [ label = "DDG: VAR3"] 
  "1000116" -> "1000115"  [ label = "DDG: VAR4"] 
  "1000116" -> "1000115"  [ label = "DDG: stdin"] 
  "1000111" -> "1000116"  [ label = "DDG: VAR3"] 
  "1000100" -> "1000116"  [ label = "DDG: "] 
  "1000100" -> "1000115"  [ label = "DDG: "] 
  "1000124" -> "1000122"  [ label = "DDG: VAR3"] 
  "1000100" -> "1000122"  [ label = "DDG: "] 
  "1000116" -> "1000124"  [ label = "DDG: VAR3"] 
  "1000100" -> "1000124"  [ label = "DDG: "] 
  "1000100" -> "1000128"  [ label = "DDG: "] 
  "1000137" -> "1000135"  [ label = "DDG: malloc(10 * sizeof(int))"] 
  "1000100" -> "1000135"  [ label = "DDG: "] 
  "1000139" -> "1000137"  [ label = "DDG: 10 * sizeof(int)"] 
  "1000140" -> "1000139"  [ label = "DDG: 10"] 
  "1000100" -> "1000140"  [ label = "DDG: "] 
  "1000100" -> "1000142"  [ label = "DDG: "] 
  "1000100" -> "1000145"  [ label = "DDG: "] 
  "1000151" -> "1000148"  [ label = "DDG: VAR6"] 
  "1000145" -> "1000148"  [ label = "DDG: VAR6"] 
  "1000100" -> "1000148"  [ label = "DDG: "] 
  "1000148" -> "1000151"  [ label = "DDG: VAR6"] 
  "1000100" -> "1000151"  [ label = "DDG: "] 
  "1000100" -> "1000154"  [ label = "DDG: "] 
  "1000161" -> "1000160"  [ label = "DDG: VAR1"] 
  "1000161" -> "1000160"  [ label = "DDG: 0"] 
  "1000103" -> "1000161"  [ label = "DDG: VAR1"] 
  "1000122" -> "1000161"  [ label = "DDG: VAR1"] 
  "1000100" -> "1000161"  [ label = "DDG: "] 
  "1000164" -> "1000160"  [ label = "DDG: VAR1"] 
  "1000164" -> "1000160"  [ label = "DDG: 10"] 
  "1000161" -> "1000164"  [ label = "DDG: VAR1"] 
  "1000100" -> "1000164"  [ label = "DDG: "] 
  "1000100" -> "1000168"  [ label = "DDG: "] 
  "1000100" -> "1000174"  [ label = "DDG: "] 
  "1000180" -> "1000177"  [ label = "DDG: VAR6"] 
  "1000174" -> "1000177"  [ label = "DDG: VAR6"] 
  "1000100" -> "1000177"  [ label = "DDG: "] 
  "1000177" -> "1000180"  [ label = "DDG: VAR6"] 
  "1000100" -> "1000180"  [ label = "DDG: "] 
  "1000154" -> "1000183"  [ label = "DDG: VAR7[VAR6]"] 
  "1000135" -> "1000183"  [ label = "DDG: VAR7"] 
  "1000100" -> "1000189"  [ label = "DDG: "] 
  "1000168" -> "1000191"  [ label = "DDG: VAR7[VAR1]"] 
  "1000183" -> "1000191"  [ label = "DDG: VAR7[VAR6]"] 
  "1000154" -> "1000191"  [ label = "DDG: VAR7[VAR6]"] 
  "1000135" -> "1000191"  [ label = "DDG: VAR7"] 
  "1000100" -> "1000191"  [ label = "DDG: "] 
  "1000115" -> "1000128"  [ label = "CDG: "] 
  "1000115" -> "1000124"  [ label = "CDG: "] 
  "1000115" -> "1000122"  [ label = "CDG: "] 
  "1000148" -> "1000155"  [ label = "CDG: "] 
  "1000148" -> "1000154"  [ label = "CDG: "] 
  "1000148" -> "1000151"  [ label = "CDG: "] 
  "1000148" -> "1000148"  [ label = "CDG: "] 
  "1000160" -> "1000168"  [ label = "CDG: "] 
  "1000160" -> "1000174"  [ label = "CDG: "] 
  "1000160" -> "1000177"  [ label = "CDG: "] 
  "1000160" -> "1000189"  [ label = "CDG: "] 
  "1000160" -> "1000169"  [ label = "CDG: "] 
  "1000161" -> "1000164"  [ label = "CDG: "] 
  "1000177" -> "1000184"  [ label = "CDG: "] 
  "1000177" -> "1000180"  [ label = "CDG: "] 
  "1000177" -> "1000177"  [ label = "CDG: "] 
  "1000177" -> "1000183"  [ label = "CDG: "] 
}
