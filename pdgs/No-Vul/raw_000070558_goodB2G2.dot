digraph FUN1 {  
"1000100" [label = "(METHOD,FUN1)" ]
"1000191" [label = "(METHOD_RETURN,static void)" ]
"1000103" [label = "(<operator>.assignment,VAR1 = -1)" ]
"1000105" [label = "(<operator>.minus,-1)" ]
"1000108" [label = "(LITERAL,6,switch(6))" ]
"1000111" [label = "(fscanf,fscanf(stdin, \"\", &VAR1))" ]
"1000118" [label = "(FUN2,FUN2(\"\"))" ]
"1000122" [label = "(LITERAL,7,switch(7))" ]
"1000128" [label = "(<operator>.assignment,* VAR3 = (int *)malloc(10 * sizeof(int)))" ]
"1000130" [label = "(<operator>.cast,(int *)malloc(10 * sizeof(int)))" ]
"1000132" [label = "(malloc,malloc(10 * sizeof(int)))" ]
"1000133" [label = "(<operator>.multiplication,10 * sizeof(int))" ]
"1000135" [label = "(<operator>.sizeOf,sizeof(int))" ]
"1000138" [label = "(<operator>.assignment,VAR2 = 0)" ]
"1000141" [label = "(<operator>.lessThan,VAR2 < 10)" ]
"1000144" [label = "(<operator>.postIncrement,VAR2++)" ]
"1000147" [label = "(<operator>.assignment,VAR3[VAR2] = 0)" ]
"1000153" [label = "(<operator>.logicalAnd,VAR1 >= 0 && VAR1 < (10))" ]
"1000154" [label = "(<operator>.greaterEqualsThan,VAR1 >= 0)" ]
"1000157" [label = "(<operator>.lessThan,VAR1 < (10))" ]
"1000161" [label = "(<operator>.assignment,VAR3[VAR1] = 1)" ]
"1000167" [label = "(<operator>.assignment,VAR2 = 0)" ]
"1000170" [label = "(<operator>.lessThan,VAR2 < 10)" ]
"1000173" [label = "(<operator>.postIncrement,VAR2++)" ]
"1000176" [label = "(FUN3,FUN3(VAR3[VAR2]))" ]
"1000182" [label = "(FUN2,FUN2(\"\"))" ]
"1000184" [label = "(free,free(VAR3))" ]
"1000188" [label = "(FUN2,FUN2(\"\"))" ]
"1000148" [label = "(<operator>.indirectIndexAccess,VAR3[VAR2])" ]
"1000162" [label = "(<operator>.indirectIndexAccess,VAR3[VAR1])" ]
"1000177" [label = "(<operator>.indirectIndexAccess,VAR3[VAR2])" ]
  "1000128" -> "1000191"  [ label = "DDG: (int *)malloc(10 * sizeof(int))"] 
  "1000141" -> "1000191"  [ label = "DDG: VAR2"] 
  "1000184" -> "1000191"  [ label = "DDG: VAR3"] 
  "1000153" -> "1000191"  [ label = "DDG: VAR1 < (10)"] 
  "1000103" -> "1000191"  [ label = "DDG: VAR1"] 
  "1000103" -> "1000191"  [ label = "DDG: -1"] 
  "1000111" -> "1000191"  [ label = "DDG: &VAR1"] 
  "1000153" -> "1000191"  [ label = "DDG: VAR1 >= 0 && VAR1 < (10)"] 
  "1000118" -> "1000191"  [ label = "DDG: FUN2(\"\")"] 
  "1000153" -> "1000191"  [ label = "DDG: VAR1 >= 0"] 
  "1000161" -> "1000191"  [ label = "DDG: VAR3[VAR1]"] 
  "1000182" -> "1000191"  [ label = "DDG: FUN2(\"\")"] 
  "1000188" -> "1000191"  [ label = "DDG: FUN2(\"\")"] 
  "1000130" -> "1000191"  [ label = "DDG: malloc(10 * sizeof(int))"] 
  "1000141" -> "1000191"  [ label = "DDG: VAR2 < 10"] 
  "1000154" -> "1000191"  [ label = "DDG: VAR1"] 
  "1000157" -> "1000191"  [ label = "DDG: VAR1"] 
  "1000147" -> "1000191"  [ label = "DDG: VAR3[VAR2]"] 
  "1000176" -> "1000191"  [ label = "DDG: FUN3(VAR3[VAR2])"] 
  "1000132" -> "1000191"  [ label = "DDG: 10 * sizeof(int)"] 
  "1000111" -> "1000191"  [ label = "DDG: stdin"] 
  "1000135" -> "1000191"  [ label = "DDG: int"] 
  "1000170" -> "1000191"  [ label = "DDG: VAR2"] 
  "1000176" -> "1000191"  [ label = "DDG: VAR3[VAR2]"] 
  "1000170" -> "1000191"  [ label = "DDG: VAR2 < 10"] 
  "1000111" -> "1000191"  [ label = "DDG: fscanf(stdin, \"\", &VAR1)"] 
  "1000105" -> "1000103"  [ label = "DDG: 1"] 
  "1000100" -> "1000103"  [ label = "DDG: "] 
  "1000100" -> "1000105"  [ label = "DDG: "] 
  "1000100" -> "1000108"  [ label = "DDG: "] 
  "1000100" -> "1000111"  [ label = "DDG: "] 
  "1000100" -> "1000118"  [ label = "DDG: "] 
  "1000100" -> "1000122"  [ label = "DDG: "] 
  "1000130" -> "1000128"  [ label = "DDG: malloc(10 * sizeof(int))"] 
  "1000100" -> "1000128"  [ label = "DDG: "] 
  "1000132" -> "1000130"  [ label = "DDG: 10 * sizeof(int)"] 
  "1000133" -> "1000132"  [ label = "DDG: 10"] 
  "1000100" -> "1000133"  [ label = "DDG: "] 
  "1000100" -> "1000135"  [ label = "DDG: "] 
  "1000100" -> "1000138"  [ label = "DDG: "] 
  "1000138" -> "1000141"  [ label = "DDG: VAR2"] 
  "1000144" -> "1000141"  [ label = "DDG: VAR2"] 
  "1000100" -> "1000141"  [ label = "DDG: "] 
  "1000141" -> "1000144"  [ label = "DDG: VAR2"] 
  "1000100" -> "1000144"  [ label = "DDG: "] 
  "1000100" -> "1000147"  [ label = "DDG: "] 
  "1000154" -> "1000153"  [ label = "DDG: VAR1"] 
  "1000154" -> "1000153"  [ label = "DDG: 0"] 
  "1000103" -> "1000154"  [ label = "DDG: VAR1"] 
  "1000100" -> "1000154"  [ label = "DDG: "] 
  "1000157" -> "1000153"  [ label = "DDG: VAR1"] 
  "1000157" -> "1000153"  [ label = "DDG: 10"] 
  "1000154" -> "1000157"  [ label = "DDG: VAR1"] 
  "1000100" -> "1000157"  [ label = "DDG: "] 
  "1000100" -> "1000161"  [ label = "DDG: "] 
  "1000100" -> "1000167"  [ label = "DDG: "] 
  "1000167" -> "1000170"  [ label = "DDG: VAR2"] 
  "1000173" -> "1000170"  [ label = "DDG: VAR2"] 
  "1000100" -> "1000170"  [ label = "DDG: "] 
  "1000170" -> "1000173"  [ label = "DDG: VAR2"] 
  "1000100" -> "1000173"  [ label = "DDG: "] 
  "1000128" -> "1000176"  [ label = "DDG: VAR3"] 
  "1000147" -> "1000176"  [ label = "DDG: VAR3[VAR2]"] 
  "1000100" -> "1000182"  [ label = "DDG: "] 
  "1000128" -> "1000184"  [ label = "DDG: VAR3"] 
  "1000147" -> "1000184"  [ label = "DDG: VAR3[VAR2]"] 
  "1000176" -> "1000184"  [ label = "DDG: VAR3[VAR2]"] 
  "1000161" -> "1000184"  [ label = "DDG: VAR3[VAR1]"] 
  "1000100" -> "1000184"  [ label = "DDG: "] 
  "1000100" -> "1000188"  [ label = "DDG: "] 
  "1000141" -> "1000141"  [ label = "CDG: "] 
  "1000141" -> "1000148"  [ label = "CDG: "] 
  "1000141" -> "1000144"  [ label = "CDG: "] 
  "1000141" -> "1000147"  [ label = "CDG: "] 
  "1000153" -> "1000161"  [ label = "CDG: "] 
  "1000153" -> "1000182"  [ label = "CDG: "] 
  "1000153" -> "1000167"  [ label = "CDG: "] 
  "1000153" -> "1000170"  [ label = "CDG: "] 
  "1000153" -> "1000162"  [ label = "CDG: "] 
  "1000154" -> "1000157"  [ label = "CDG: "] 
  "1000170" -> "1000173"  [ label = "CDG: "] 
  "1000170" -> "1000170"  [ label = "CDG: "] 
  "1000170" -> "1000176"  [ label = "CDG: "] 
  "1000170" -> "1000177"  [ label = "CDG: "] 
}
