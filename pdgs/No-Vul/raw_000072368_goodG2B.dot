digraph FUN1 {  
"1000100" [label = "(METHOD,FUN1)" ]
"1000126" [label = "(METHOD_RETURN,static void)" ]
"1000103" [label = "(<operator>.assignment,VAR1 = (char *)malloc(100*sizeof(char)))" ]
"1000105" [label = "(<operator>.cast,(char *)malloc(100*sizeof(char)))" ]
"1000107" [label = "(malloc,malloc(100*sizeof(char)))" ]
"1000108" [label = "(<operator>.multiplication,100*sizeof(char))" ]
"1000110" [label = "(<operator>.sizeOf,sizeof(char))" ]
"1000114" [label = "(<operator>.assignment,VAR2[50] = \"\")" ]
"1000117" [label = "(strncat,strncat(VAR2, VAR1, strlen(VAR1)))" ]
"1000120" [label = "(strlen,strlen(VAR1))" ]
"1000122" [label = "(FUN2,FUN2(VAR1))" ]
"1000124" [label = "(free,free(VAR1))" ]
  "1000117" -> "1000126"  [ label = "DDG: strncat(VAR2, VAR1, strlen(VAR1))"] 
  "1000124" -> "1000126"  [ label = "DDG: VAR1"] 
  "1000107" -> "1000126"  [ label = "DDG: 100*sizeof(char)"] 
  "1000105" -> "1000126"  [ label = "DDG: malloc(100*sizeof(char))"] 
  "1000103" -> "1000126"  [ label = "DDG: (char *)malloc(100*sizeof(char))"] 
  "1000117" -> "1000126"  [ label = "DDG: VAR2"] 
  "1000122" -> "1000126"  [ label = "DDG: FUN2(VAR1)"] 
  "1000110" -> "1000126"  [ label = "DDG: char"] 
  "1000117" -> "1000126"  [ label = "DDG: strlen(VAR1)"] 
  "1000105" -> "1000103"  [ label = "DDG: malloc(100*sizeof(char))"] 
  "1000100" -> "1000103"  [ label = "DDG: "] 
  "1000107" -> "1000105"  [ label = "DDG: 100*sizeof(char)"] 
  "1000108" -> "1000107"  [ label = "DDG: 100"] 
  "1000100" -> "1000108"  [ label = "DDG: "] 
  "1000100" -> "1000110"  [ label = "DDG: "] 
  "1000100" -> "1000114"  [ label = "DDG: "] 
  "1000114" -> "1000117"  [ label = "DDG: VAR2"] 
  "1000100" -> "1000117"  [ label = "DDG: "] 
  "1000120" -> "1000117"  [ label = "DDG: VAR1"] 
  "1000103" -> "1000120"  [ label = "DDG: VAR1"] 
  "1000100" -> "1000120"  [ label = "DDG: "] 
  "1000117" -> "1000122"  [ label = "DDG: VAR1"] 
  "1000100" -> "1000122"  [ label = "DDG: "] 
  "1000122" -> "1000124"  [ label = "DDG: VAR1"] 
  "1000100" -> "1000124"  [ label = "DDG: "] 
}
