digraph FUN1 {  
"1000100" [label = "(METHOD,FUN1)" ]
"1000138" [label = "(METHOD_RETURN,static void)" ]
"1000105" [label = "(<operator>.notEquals,5!=5)" ]
"1000109" [label = "(FUN2,FUN2(\"\"))" ]
"1000113" [label = "(<operator>.assignment,VAR1 = VAR2)" ]
"1000120" [label = "(<operator>.assignment,VAR3 = 0)" ]
"1000123" [label = "(<operator>.lessThan,VAR3 < 100)" ]
"1000126" [label = "(<operator>.postIncrement,VAR3++)" ]
"1000129" [label = "(<operator>.assignment,VAR1[VAR3] = VAR4[VAR3])" ]
"1000136" [label = "(FUN2,FUN2(VAR1))" ]
"1000130" [label = "(<operator>.indirectIndexAccess,VAR1[VAR3])" ]
"1000133" [label = "(<operator>.indirectIndexAccess,VAR4[VAR3])" ]
  "1000105" -> "1000138"  [ label = "DDG: 5!=5"] 
  "1000123" -> "1000138"  [ label = "DDG: VAR3 < 100"] 
  "1000113" -> "1000138"  [ label = "DDG: VAR2"] 
  "1000129" -> "1000138"  [ label = "DDG: VAR4[VAR3]"] 
  "1000136" -> "1000138"  [ label = "DDG: FUN2(VAR1)"] 
  "1000123" -> "1000138"  [ label = "DDG: VAR3"] 
  "1000129" -> "1000138"  [ label = "DDG: VAR1[VAR3]"] 
  "1000136" -> "1000138"  [ label = "DDG: VAR1"] 
  "1000109" -> "1000138"  [ label = "DDG: FUN2(\"\")"] 
  "1000100" -> "1000105"  [ label = "DDG: "] 
  "1000100" -> "1000109"  [ label = "DDG: "] 
  "1000100" -> "1000113"  [ label = "DDG: "] 
  "1000100" -> "1000120"  [ label = "DDG: "] 
  "1000120" -> "1000123"  [ label = "DDG: VAR3"] 
  "1000126" -> "1000123"  [ label = "DDG: VAR3"] 
  "1000100" -> "1000123"  [ label = "DDG: "] 
  "1000123" -> "1000126"  [ label = "DDG: VAR3"] 
  "1000100" -> "1000126"  [ label = "DDG: "] 
  "1000129" -> "1000136"  [ label = "DDG: VAR1[VAR3]"] 
  "1000113" -> "1000136"  [ label = "DDG: VAR1"] 
  "1000100" -> "1000136"  [ label = "DDG: "] 
  "1000105" -> "1000109"  [ label = "CDG: "] 
  "1000105" -> "1000113"  [ label = "CDG: "] 
  "1000123" -> "1000129"  [ label = "CDG: "] 
  "1000123" -> "1000123"  [ label = "CDG: "] 
  "1000123" -> "1000130"  [ label = "CDG: "] 
  "1000123" -> "1000133"  [ label = "CDG: "] 
  "1000123" -> "1000126"  [ label = "CDG: "] 
}
