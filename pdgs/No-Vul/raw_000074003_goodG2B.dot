digraph FUN1 {  
"1000100" [label = "(METHOD,FUN1)" ]
"1000142" [label = "(METHOD_RETURN,static void)" ]
"1000105" [label = "(<operator>.assignment,VAR1 = VAR3)" ]
"1000108" [label = "(<operator>.assignment,VAR2.VAR4 = VAR1)" ]
"1000115" [label = "(<operator>.assignment,* VAR1 = VAR2.VAR5)" ]
"1000124" [label = "(<operator>.assignment,VAR6 = 0)" ]
"1000127" [label = "(<operator>.lessThan,VAR6 < 100)" ]
"1000130" [label = "(<operator>.postIncrement,VAR6++)" ]
"1000133" [label = "(<operator>.assignment,VAR1[VAR6] = VAR7[VAR6])" ]
"1000140" [label = "(FUN2,FUN2(VAR1))" ]
"1000134" [label = "(<operator>.indirectIndexAccess,VAR1[VAR6])" ]
"1000137" [label = "(<operator>.indirectIndexAccess,VAR7[VAR6])" ]
  "1000115" -> "1000142"  [ label = "DDG: VAR2.VAR5"] 
  "1000105" -> "1000142"  [ label = "DDG: VAR3"] 
  "1000140" -> "1000142"  [ label = "DDG: VAR1"] 
  "1000140" -> "1000142"  [ label = "DDG: FUN2(VAR1)"] 
  "1000133" -> "1000142"  [ label = "DDG: VAR1[VAR6]"] 
  "1000127" -> "1000142"  [ label = "DDG: VAR6 < 100"] 
  "1000127" -> "1000142"  [ label = "DDG: VAR6"] 
  "1000133" -> "1000142"  [ label = "DDG: VAR7[VAR6]"] 
  "1000108" -> "1000142"  [ label = "DDG: VAR2.VAR4"] 
  "1000100" -> "1000105"  [ label = "DDG: "] 
  "1000105" -> "1000108"  [ label = "DDG: VAR1"] 
  "1000100" -> "1000108"  [ label = "DDG: "] 
  "1000100" -> "1000115"  [ label = "DDG: "] 
  "1000100" -> "1000124"  [ label = "DDG: "] 
  "1000124" -> "1000127"  [ label = "DDG: VAR6"] 
  "1000130" -> "1000127"  [ label = "DDG: VAR6"] 
  "1000100" -> "1000127"  [ label = "DDG: "] 
  "1000127" -> "1000130"  [ label = "DDG: VAR6"] 
  "1000100" -> "1000130"  [ label = "DDG: "] 
  "1000133" -> "1000140"  [ label = "DDG: VAR1[VAR6]"] 
  "1000115" -> "1000140"  [ label = "DDG: VAR1"] 
  "1000100" -> "1000140"  [ label = "DDG: "] 
  "1000127" -> "1000137"  [ label = "CDG: "] 
  "1000127" -> "1000130"  [ label = "CDG: "] 
  "1000127" -> "1000133"  [ label = "CDG: "] 
  "1000127" -> "1000127"  [ label = "CDG: "] 
  "1000127" -> "1000134"  [ label = "CDG: "] 
}
