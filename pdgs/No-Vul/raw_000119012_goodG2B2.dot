digraph FUN1 {  
"1000100" [label = "(METHOD,FUN1)" ]
"1000132" [label = "(METHOD_RETURN,static void)" ]
"1000104" [label = "(<operator>.assignment,VAR2[100] = VAR3)" ]
"1000107" [label = "(<operator>.assignment,VAR1 = VAR2)" ]
"1000111" [label = "(<operator>.equals,VAR4==5)" ]
"1000115" [label = "(strcat,strcat(VAR1, \"\"))" ]
"1000120" [label = "(<operator>.assignment,VAR6 = FUN2(VAR1, \"\"))" ]
"1000122" [label = "(FUN2,FUN2(VAR1, \"\"))" ]
"1000126" [label = "(<operator>.notEquals,VAR6 != NULL)" ]
"1000130" [label = "(FUN3,FUN3(VAR6))" ]
  "1000122" -> "1000132"  [ label = "DDG: VAR1"] 
  "1000115" -> "1000132"  [ label = "DDG: strcat(VAR1, \"\")"] 
  "1000126" -> "1000132"  [ label = "DDG: VAR6"] 
  "1000111" -> "1000132"  [ label = "DDG: VAR4"] 
  "1000120" -> "1000132"  [ label = "DDG: FUN2(VAR1, \"\")"] 
  "1000126" -> "1000132"  [ label = "DDG: NULL"] 
  "1000111" -> "1000132"  [ label = "DDG: VAR4==5"] 
  "1000130" -> "1000132"  [ label = "DDG: VAR6"] 
  "1000130" -> "1000132"  [ label = "DDG: FUN3(VAR6)"] 
  "1000126" -> "1000132"  [ label = "DDG: VAR6 != NULL"] 
  "1000104" -> "1000132"  [ label = "DDG: VAR3"] 
  "1000107" -> "1000132"  [ label = "DDG: VAR2"] 
  "1000100" -> "1000104"  [ label = "DDG: "] 
  "1000104" -> "1000107"  [ label = "DDG: VAR2"] 
  "1000100" -> "1000107"  [ label = "DDG: "] 
  "1000100" -> "1000111"  [ label = "DDG: "] 
  "1000107" -> "1000115"  [ label = "DDG: VAR1"] 
  "1000100" -> "1000115"  [ label = "DDG: "] 
  "1000122" -> "1000120"  [ label = "DDG: VAR1"] 
  "1000122" -> "1000120"  [ label = "DDG: \"\""] 
  "1000100" -> "1000120"  [ label = "DDG: "] 
  "1000107" -> "1000122"  [ label = "DDG: VAR1"] 
  "1000115" -> "1000122"  [ label = "DDG: VAR1"] 
  "1000100" -> "1000122"  [ label = "DDG: "] 
  "1000120" -> "1000126"  [ label = "DDG: VAR6"] 
  "1000100" -> "1000126"  [ label = "DDG: "] 
  "1000126" -> "1000130"  [ label = "DDG: VAR6"] 
  "1000100" -> "1000130"  [ label = "DDG: "] 
  "1000111" -> "1000115"  [ label = "CDG: "] 
  "1000126" -> "1000130"  [ label = "CDG: "] 
}
