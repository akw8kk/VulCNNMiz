digraph FUN1 {  
"1000100" [label = "(METHOD,FUN1)" ]
"1000131" [label = "(METHOD_RETURN,static void)" ]
"1000104" [label = "(<operator>.assignment,VAR2[100] = VAR3)" ]
"1000107" [label = "(<operator>.assignment,VAR1 = VAR2)" ]
"1000110" [label = "(<operator>.assignment,VAR4 = 0)" ]
"1000113" [label = "(<operator>.assignment,VAR1 = FUN2(VAR1))" ]
"1000115" [label = "(FUN2,FUN2(VAR1))" ]
"1000119" [label = "(<operator>.assignment,VAR6 = FUN3(VAR1, \"\"))" ]
"1000121" [label = "(FUN3,FUN3(VAR1, \"\"))" ]
"1000125" [label = "(<operator>.notEquals,VAR6 != NULL)" ]
"1000129" [label = "(FUN4,FUN4(VAR6))" ]
  "1000125" -> "1000131"  [ label = "DDG: VAR6 != NULL"] 
  "1000129" -> "1000131"  [ label = "DDG: FUN4(VAR6)"] 
  "1000125" -> "1000131"  [ label = "DDG: NULL"] 
  "1000121" -> "1000131"  [ label = "DDG: VAR1"] 
  "1000110" -> "1000131"  [ label = "DDG: VAR4"] 
  "1000129" -> "1000131"  [ label = "DDG: VAR6"] 
  "1000125" -> "1000131"  [ label = "DDG: VAR6"] 
  "1000113" -> "1000131"  [ label = "DDG: FUN2(VAR1)"] 
  "1000119" -> "1000131"  [ label = "DDG: FUN3(VAR1, \"\")"] 
  "1000104" -> "1000131"  [ label = "DDG: VAR3"] 
  "1000107" -> "1000131"  [ label = "DDG: VAR2"] 
  "1000100" -> "1000104"  [ label = "DDG: "] 
  "1000104" -> "1000107"  [ label = "DDG: VAR2"] 
  "1000100" -> "1000107"  [ label = "DDG: "] 
  "1000100" -> "1000110"  [ label = "DDG: "] 
  "1000115" -> "1000113"  [ label = "DDG: VAR1"] 
  "1000100" -> "1000113"  [ label = "DDG: "] 
  "1000107" -> "1000115"  [ label = "DDG: VAR1"] 
  "1000100" -> "1000115"  [ label = "DDG: "] 
  "1000121" -> "1000119"  [ label = "DDG: VAR1"] 
  "1000121" -> "1000119"  [ label = "DDG: \"\""] 
  "1000100" -> "1000119"  [ label = "DDG: "] 
  "1000113" -> "1000121"  [ label = "DDG: VAR1"] 
  "1000100" -> "1000121"  [ label = "DDG: "] 
  "1000119" -> "1000125"  [ label = "DDG: VAR6"] 
  "1000100" -> "1000125"  [ label = "DDG: "] 
  "1000125" -> "1000129"  [ label = "DDG: VAR6"] 
  "1000100" -> "1000129"  [ label = "DDG: "] 
  "1000125" -> "1000129"  [ label = "CDG: "] 
}
