digraph FUN1 {  
"1000100" [label = "(METHOD,FUN1)" ]
"1000175" [label = "(METHOD_RETURN,void)" ]
"1000103" [label = "(<operator>.assignment,VAR1 = -1)" ]
"1000105" [label = "(<operator>.minus,-1)" ]
"1000108" [label = "(LITERAL,1,if(1))" ]
"1000110" [label = "(fscanf,fscanf(stdin, \"\", &VAR1))" ]
"1000116" [label = "(LITERAL,1,if(1))" ]
"1000121" [label = "(<operator>.assignment,* VAR3 = (int *)malloc(10 * sizeof(int)))" ]
"1000123" [label = "(<operator>.cast,(int *)malloc(10 * sizeof(int)))" ]
"1000125" [label = "(malloc,malloc(10 * sizeof(int)))" ]
"1000126" [label = "(<operator>.multiplication,10 * sizeof(int))" ]
"1000128" [label = "(<operator>.sizeOf,sizeof(int))" ]
"1000131" [label = "(<operator>.assignment,VAR2 = 0)" ]
"1000134" [label = "(<operator>.lessThan,VAR2 < 10)" ]
"1000137" [label = "(<operator>.postIncrement,VAR2++)" ]
"1000140" [label = "(<operator>.assignment,VAR3[VAR2] = 0)" ]
"1000146" [label = "(<operator>.greaterEqualsThan,VAR1 >= 0)" ]
"1000150" [label = "(<operator>.assignment,VAR3[VAR1] = 1)" ]
"1000156" [label = "(<operator>.assignment,VAR2 = 0)" ]
"1000159" [label = "(<operator>.lessThan,VAR2 < 10)" ]
"1000162" [label = "(<operator>.postIncrement,VAR2++)" ]
"1000165" [label = "(FUN2,FUN2(VAR3[VAR2]))" ]
"1000171" [label = "(FUN3,FUN3(\"\"))" ]
"1000173" [label = "(free,free(VAR3))" ]
"1000141" [label = "(<operator>.indirectIndexAccess,VAR3[VAR2])" ]
"1000151" [label = "(<operator>.indirectIndexAccess,VAR3[VAR1])" ]
"1000166" [label = "(<operator>.indirectIndexAccess,VAR3[VAR2])" ]
  "1000159" -> "1000175"  [ label = "DDG: VAR2 < 10"] 
  "1000125" -> "1000175"  [ label = "DDG: 10 * sizeof(int)"] 
  "1000123" -> "1000175"  [ label = "DDG: malloc(10 * sizeof(int))"] 
  "1000150" -> "1000175"  [ label = "DDG: VAR3[VAR1]"] 
  "1000103" -> "1000175"  [ label = "DDG: VAR1"] 
  "1000103" -> "1000175"  [ label = "DDG: -1"] 
  "1000159" -> "1000175"  [ label = "DDG: VAR2"] 
  "1000171" -> "1000175"  [ label = "DDG: FUN3(\"\")"] 
  "1000121" -> "1000175"  [ label = "DDG: (int *)malloc(10 * sizeof(int))"] 
  "1000140" -> "1000175"  [ label = "DDG: VAR3[VAR2]"] 
  "1000165" -> "1000175"  [ label = "DDG: VAR3[VAR2]"] 
  "1000128" -> "1000175"  [ label = "DDG: int"] 
  "1000134" -> "1000175"  [ label = "DDG: VAR2 < 10"] 
  "1000134" -> "1000175"  [ label = "DDG: VAR2"] 
  "1000110" -> "1000175"  [ label = "DDG: &VAR1"] 
  "1000110" -> "1000175"  [ label = "DDG: fscanf(stdin, \"\", &VAR1)"] 
  "1000146" -> "1000175"  [ label = "DDG: VAR1 >= 0"] 
  "1000146" -> "1000175"  [ label = "DDG: VAR1"] 
  "1000110" -> "1000175"  [ label = "DDG: stdin"] 
  "1000173" -> "1000175"  [ label = "DDG: VAR3"] 
  "1000165" -> "1000175"  [ label = "DDG: FUN2(VAR3[VAR2])"] 
  "1000105" -> "1000103"  [ label = "DDG: 1"] 
  "1000100" -> "1000103"  [ label = "DDG: "] 
  "1000100" -> "1000105"  [ label = "DDG: "] 
  "1000100" -> "1000108"  [ label = "DDG: "] 
  "1000100" -> "1000110"  [ label = "DDG: "] 
  "1000100" -> "1000116"  [ label = "DDG: "] 
  "1000123" -> "1000121"  [ label = "DDG: malloc(10 * sizeof(int))"] 
  "1000100" -> "1000121"  [ label = "DDG: "] 
  "1000125" -> "1000123"  [ label = "DDG: 10 * sizeof(int)"] 
  "1000126" -> "1000125"  [ label = "DDG: 10"] 
  "1000100" -> "1000126"  [ label = "DDG: "] 
  "1000100" -> "1000128"  [ label = "DDG: "] 
  "1000100" -> "1000131"  [ label = "DDG: "] 
  "1000131" -> "1000134"  [ label = "DDG: VAR2"] 
  "1000137" -> "1000134"  [ label = "DDG: VAR2"] 
  "1000100" -> "1000134"  [ label = "DDG: "] 
  "1000134" -> "1000137"  [ label = "DDG: VAR2"] 
  "1000100" -> "1000137"  [ label = "DDG: "] 
  "1000100" -> "1000140"  [ label = "DDG: "] 
  "1000103" -> "1000146"  [ label = "DDG: VAR1"] 
  "1000100" -> "1000146"  [ label = "DDG: "] 
  "1000100" -> "1000150"  [ label = "DDG: "] 
  "1000100" -> "1000156"  [ label = "DDG: "] 
  "1000156" -> "1000159"  [ label = "DDG: VAR2"] 
  "1000162" -> "1000159"  [ label = "DDG: VAR2"] 
  "1000100" -> "1000159"  [ label = "DDG: "] 
  "1000159" -> "1000162"  [ label = "DDG: VAR2"] 
  "1000100" -> "1000162"  [ label = "DDG: "] 
  "1000140" -> "1000165"  [ label = "DDG: VAR3[VAR2]"] 
  "1000121" -> "1000165"  [ label = "DDG: VAR3"] 
  "1000100" -> "1000171"  [ label = "DDG: "] 
  "1000150" -> "1000173"  [ label = "DDG: VAR3[VAR1]"] 
  "1000140" -> "1000173"  [ label = "DDG: VAR3[VAR2]"] 
  "1000165" -> "1000173"  [ label = "DDG: VAR3[VAR2]"] 
  "1000121" -> "1000173"  [ label = "DDG: VAR3"] 
  "1000100" -> "1000173"  [ label = "DDG: "] 
  "1000134" -> "1000141"  [ label = "CDG: "] 
  "1000134" -> "1000137"  [ label = "CDG: "] 
  "1000134" -> "1000140"  [ label = "CDG: "] 
  "1000134" -> "1000134"  [ label = "CDG: "] 
  "1000146" -> "1000156"  [ label = "CDG: "] 
  "1000146" -> "1000150"  [ label = "CDG: "] 
  "1000146" -> "1000159"  [ label = "CDG: "] 
  "1000146" -> "1000151"  [ label = "CDG: "] 
  "1000146" -> "1000171"  [ label = "CDG: "] 
  "1000159" -> "1000166"  [ label = "CDG: "] 
  "1000159" -> "1000165"  [ label = "CDG: "] 
  "1000159" -> "1000159"  [ label = "CDG: "] 
  "1000159" -> "1000162"  [ label = "CDG: "] 
}
